node {
  name: "lstm_1_input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 100
        }
        dim {
          size: 9
        }
      }
    }
  }
}
node {
  name: "lstm_1/lstm_cell/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\t\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_1/lstm_cell/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.2092740386724472
      }
    }
  }
}
node {
  name: "lstm_1/lstm_cell/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2092740386724472
      }
    }
  }
}
node {
  name: "lstm_1/lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "lstm_1/lstm_cell/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "lstm_1/lstm_cell/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "lstm_1/lstm_cell/kernel/Initializer/random_uniform/max"
  input: "lstm_1/lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "lstm_1/lstm_cell/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "lstm_1/lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  input: "lstm_1/lstm_cell/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "lstm_1/lstm_cell/kernel/Initializer/random_uniform"
  op: "AddV2"
  input: "lstm_1/lstm_cell/kernel/Initializer/random_uniform/mul"
  input: "lstm_1/lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "lstm_1/lstm_cell/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 9
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "lstm_1/lstm_cell/kernel"
    }
  }
}
node {
  name: "lstm_1/lstm_cell/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "lstm_1/lstm_cell/kernel"
}
node {
  name: "lstm_1/lstm_cell/kernel/Assign"
  op: "AssignVariableOp"
  input: "lstm_1/lstm_cell/kernel"
  input: "lstm_1/lstm_cell/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/lstm_cell/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "lstm_1/lstm_cell/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/lstm_cell/recurrent_kernel/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_1/lstm_cell/recurrent_kernel/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm_1/lstm_cell/recurrent_kernel/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm_1/lstm_cell/recurrent_kernel/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "lstm_1/lstm_cell/recurrent_kernel/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "lstm_1/lstm_cell/recurrent_kernel/Initializer/random_normal/mul"
  op: "Mul"
  input: "lstm_1/lstm_cell/recurrent_kernel/Initializer/random_normal/RandomStandardNormal"
  input: "lstm_1/lstm_cell/recurrent_kernel/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/recurrent_kernel"
      }
    }
  }
}
node {
  name: "lstm_1/lstm_cell/recurrent_kernel/Initializer/random_normal"
  op: "AddV2"
  input: "lstm_1/lstm_cell/recurrent_kernel/Initializer/random_normal/mul"
  input: "lstm_1/lstm_cell/recurrent_kernel/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/recurrent_kernel"
      }
    }
  }
}
node {
  name: "lstm_1/lstm_cell/recurrent_kernel/Initializer/Qr"
  op: "Qr"
  input: "lstm_1/lstm_cell/recurrent_kernel/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/recurrent_kernel"
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "lstm_1/lstm_cell/recurrent_kernel/Initializer/DiagPart"
  op: "DiagPart"
  input: "lstm_1/lstm_cell/recurrent_kernel/Initializer/Qr:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/recurrent_kernel"
      }
    }
  }
}
node {
  name: "lstm_1/lstm_cell/recurrent_kernel/Initializer/Sign"
  op: "Sign"
  input: "lstm_1/lstm_cell/recurrent_kernel/Initializer/DiagPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/recurrent_kernel"
      }
    }
  }
}
node {
  name: "lstm_1/lstm_cell/recurrent_kernel/Initializer/mul"
  op: "Mul"
  input: "lstm_1/lstm_cell/recurrent_kernel/Initializer/Qr"
  input: "lstm_1/lstm_cell/recurrent_kernel/Initializer/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/recurrent_kernel"
      }
    }
  }
}
node {
  name: "lstm_1/lstm_cell/recurrent_kernel/Initializer/matrix_transpose/transpose/perm"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_1/lstm_cell/recurrent_kernel/Initializer/matrix_transpose/transpose"
  op: "Transpose"
  input: "lstm_1/lstm_cell/recurrent_kernel/Initializer/mul"
  input: "lstm_1/lstm_cell/recurrent_kernel/Initializer/matrix_transpose/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/recurrent_kernel"
      }
    }
  }
}
node {
  name: "lstm_1/lstm_cell/recurrent_kernel/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_1/lstm_cell/recurrent_kernel/Initializer/Reshape"
  op: "Reshape"
  input: "lstm_1/lstm_cell/recurrent_kernel/Initializer/matrix_transpose/transpose"
  input: "lstm_1/lstm_cell/recurrent_kernel/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/recurrent_kernel"
      }
    }
  }
}
node {
  name: "lstm_1/lstm_cell/recurrent_kernel/Initializer/mul_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm_1/lstm_cell/recurrent_kernel/Initializer/mul_1"
  op: "Mul"
  input: "lstm_1/lstm_cell/recurrent_kernel/Initializer/mul_1/x"
  input: "lstm_1/lstm_cell/recurrent_kernel/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/recurrent_kernel"
      }
    }
  }
}
node {
  name: "lstm_1/lstm_cell/recurrent_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/recurrent_kernel"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "lstm_1/lstm_cell/recurrent_kernel"
    }
  }
}
node {
  name: "lstm_1/lstm_cell/recurrent_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "lstm_1/lstm_cell/recurrent_kernel"
}
node {
  name: "lstm_1/lstm_cell/recurrent_kernel/Assign"
  op: "AssignVariableOp"
  input: "lstm_1/lstm_cell/recurrent_kernel"
  input: "lstm_1/lstm_cell/recurrent_kernel/Initializer/mul_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/lstm_cell/recurrent_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "lstm_1/lstm_cell/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/lstm_cell/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm_1/lstm_cell/bias/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm_1/lstm_cell/bias/Initializer/zeros_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm_1/lstm_cell/bias/Initializer/concat/axis"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm_1/lstm_cell/bias/Initializer/concat"
  op: "ConcatV2"
  input: "lstm_1/lstm_cell/bias/Initializer/zeros"
  input: "lstm_1/lstm_cell/bias/Initializer/ones"
  input: "lstm_1/lstm_cell/bias/Initializer/zeros_1"
  input: "lstm_1/lstm_cell/bias/Initializer/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/bias"
      }
    }
  }
}
node {
  name: "lstm_1/lstm_cell/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "lstm_1/lstm_cell/bias"
    }
  }
}
node {
  name: "lstm_1/lstm_cell/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "lstm_1/lstm_cell/bias"
}
node {
  name: "lstm_1/lstm_cell/bias/Assign"
  op: "AssignVariableOp"
  input: "lstm_1/lstm_cell/bias"
  input: "lstm_1/lstm_cell/bias/Initializer/concat"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/lstm_cell/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "lstm_1/lstm_cell/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/Shape"
  op: "Shape"
  input: "lstm_1_input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm_1/strided_slice"
  op: "StridedSlice"
  input: "lstm_1/Shape"
  input: "lstm_1/strided_slice/stack"
  input: "lstm_1/strided_slice/stack_1"
  input: "lstm_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "lstm_1/zeros/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "lstm_1/zeros/mul"
  op: "Mul"
  input: "lstm_1/strided_slice"
  input: "lstm_1/zeros/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/zeros/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "lstm_1/zeros/Less"
  op: "Less"
  input: "lstm_1/zeros/mul"
  input: "lstm_1/zeros/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/zeros/packed/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "lstm_1/zeros/packed"
  op: "Pack"
  input: "lstm_1/strided_slice"
  input: "lstm_1/zeros/packed/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "lstm_1/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm_1/zeros"
  op: "Fill"
  input: "lstm_1/zeros/packed"
  input: "lstm_1/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/zeros_1/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "lstm_1/zeros_1/mul"
  op: "Mul"
  input: "lstm_1/strided_slice"
  input: "lstm_1/zeros_1/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/zeros_1/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "lstm_1/zeros_1/Less"
  op: "Less"
  input: "lstm_1/zeros_1/mul"
  input: "lstm_1/zeros_1/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/zeros_1/packed/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "lstm_1/zeros_1/packed"
  op: "Pack"
  input: "lstm_1/strided_slice"
  input: "lstm_1/zeros_1/packed/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "lstm_1/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm_1/zeros_1"
  op: "Fill"
  input: "lstm_1/zeros_1/packed"
  input: "lstm_1/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_1/transpose"
  op: "Transpose"
  input: "lstm_1_input"
  input: "lstm_1/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/Shape_1"
  op: "Shape"
  input: "lstm_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm_1/strided_slice_1"
  op: "StridedSlice"
  input: "lstm_1/Shape_1"
  input: "lstm_1/strided_slice_1/stack"
  input: "lstm_1/strided_slice_1/stack_1"
  input: "lstm_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "lstm_1/TensorArrayV2/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_1/TensorArrayV2"
  op: "TensorListReserve"
  input: "lstm_1/TensorArrayV2/element_shape"
  input: "lstm_1/strided_slice_1"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/TensorArrayUnstack/TensorListFromTensor/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\t\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_1/TensorArrayUnstack/TensorListFromTensor"
  op: "TensorListFromTensor"
  input: "lstm_1/transpose"
  input: "lstm_1/TensorArrayUnstack/TensorListFromTensor/element_shape"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm_1/strided_slice_2"
  op: "StridedSlice"
  input: "lstm_1/transpose"
  input: "lstm_1/strided_slice_2/stack"
  input: "lstm_1/strided_slice_2/stack_1"
  input: "lstm_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "lstm_1/lstm_cell_1/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "lstm_1/lstm_cell/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/lstm_cell_1/MatMul"
  op: "MatMul"
  input: "lstm_1/strided_slice_2"
  input: "lstm_1/lstm_cell_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "lstm_1/lstm_cell_1/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "lstm_1/lstm_cell/recurrent_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/lstm_cell_1/MatMul_1"
  op: "MatMul"
  input: "lstm_1/zeros"
  input: "lstm_1/lstm_cell_1/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "lstm_1/lstm_cell_1/add"
  op: "AddV2"
  input: "lstm_1/lstm_cell_1/MatMul"
  input: "lstm_1/lstm_cell_1/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/lstm_cell_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "lstm_1/lstm_cell/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/lstm_cell_1/BiasAdd"
  op: "BiasAdd"
  input: "lstm_1/lstm_cell_1/add"
  input: "lstm_1/lstm_cell_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "lstm_1/lstm_cell_1/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm_1/lstm_cell_1/split"
  op: "Split"
  input: "lstm_1/lstm_cell_1/split/split_dim"
  input: "lstm_1/lstm_cell_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "lstm_1/lstm_cell_1/Sigmoid"
  op: "Sigmoid"
  input: "lstm_1/lstm_cell_1/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/lstm_cell_1/Sigmoid_1"
  op: "Sigmoid"
  input: "lstm_1/lstm_cell_1/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/lstm_cell_1/mul"
  op: "Mul"
  input: "lstm_1/lstm_cell_1/Sigmoid_1"
  input: "lstm_1/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/lstm_cell_1/Tanh"
  op: "Tanh"
  input: "lstm_1/lstm_cell_1/split:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/lstm_cell_1/mul_1"
  op: "Mul"
  input: "lstm_1/lstm_cell_1/Sigmoid"
  input: "lstm_1/lstm_cell_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/lstm_cell_1/add_1"
  op: "AddV2"
  input: "lstm_1/lstm_cell_1/mul"
  input: "lstm_1/lstm_cell_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/lstm_cell_1/Sigmoid_2"
  op: "Sigmoid"
  input: "lstm_1/lstm_cell_1/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/lstm_cell_1/Tanh_1"
  op: "Tanh"
  input: "lstm_1/lstm_cell_1/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/lstm_cell_1/mul_2"
  op: "Mul"
  input: "lstm_1/lstm_cell_1/Sigmoid_2"
  input: "lstm_1/lstm_cell_1/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/TensorArrayV2_1/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_1/TensorArrayV2_1"
  op: "TensorListReserve"
  input: "lstm_1/TensorArrayV2_1/element_shape"
  input: "lstm_1/strided_slice_1"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/time"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm_1/while/maximum_iterations"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_1/while/loop_counter"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm_1/while/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList/max_num_elements"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList"
  op: "EmptyTensorList"
  input: "lstm_1/while/Const"
  input: "lstm_1/while/EmptyTensorList/max_num_elements"
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/while/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_1/max_num_elements"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_1"
  op: "EmptyTensorList"
  input: "lstm_1/while/Const_1"
  input: "lstm_1/while/EmptyTensorList_1/max_num_elements"
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/while/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_2/max_num_elements"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_2"
  op: "EmptyTensorList"
  input: "lstm_1/while/Const_2"
  input: "lstm_1/while/EmptyTensorList_2/max_num_elements"
  attr {
    key: "element_dtype"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_3/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_3/max_num_elements"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_3"
  op: "EmptyTensorList"
  input: "lstm_1/while/EmptyTensorList_3/element_shape"
  input: "lstm_1/while/EmptyTensorList_3/max_num_elements"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_4/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_4/max_num_elements"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_4"
  op: "EmptyTensorList"
  input: "lstm_1/while/EmptyTensorList_4/element_shape"
  input: "lstm_1/while/EmptyTensorList_4/max_num_elements"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_5/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_5/max_num_elements"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_5"
  op: "EmptyTensorList"
  input: "lstm_1/while/EmptyTensorList_5/element_shape"
  input: "lstm_1/while/EmptyTensorList_5/max_num_elements"
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_6/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\t\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_6/max_num_elements"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_6"
  op: "EmptyTensorList"
  input: "lstm_1/while/EmptyTensorList_6/element_shape"
  input: "lstm_1/while/EmptyTensorList_6/max_num_elements"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_7/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\t\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_7/max_num_elements"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_7"
  op: "EmptyTensorList"
  input: "lstm_1/while/EmptyTensorList_7/element_shape"
  input: "lstm_1/while/EmptyTensorList_7/max_num_elements"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_8/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\200\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_8/max_num_elements"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_8"
  op: "EmptyTensorList"
  input: "lstm_1/while/EmptyTensorList_8/element_shape"
  input: "lstm_1/while/EmptyTensorList_8/max_num_elements"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_9/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_9/max_num_elements"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_9"
  op: "EmptyTensorList"
  input: "lstm_1/while/EmptyTensorList_9/element_shape"
  input: "lstm_1/while/EmptyTensorList_9/max_num_elements"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_10/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\200\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_10/max_num_elements"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_10"
  op: "EmptyTensorList"
  input: "lstm_1/while/EmptyTensorList_10/element_shape"
  input: "lstm_1/while/EmptyTensorList_10/max_num_elements"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_11/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\200\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_11/max_num_elements"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_11"
  op: "EmptyTensorList"
  input: "lstm_1/while/EmptyTensorList_11/element_shape"
  input: "lstm_1/while/EmptyTensorList_11/max_num_elements"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_12/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_12/max_num_elements"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_12"
  op: "EmptyTensorList"
  input: "lstm_1/while/EmptyTensorList_12/element_shape"
  input: "lstm_1/while/EmptyTensorList_12/max_num_elements"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_13/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\200\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_13/max_num_elements"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_13"
  op: "EmptyTensorList"
  input: "lstm_1/while/EmptyTensorList_13/element_shape"
  input: "lstm_1/while/EmptyTensorList_13/max_num_elements"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/while/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_14/max_num_elements"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_14"
  op: "EmptyTensorList"
  input: "lstm_1/while/Const_3"
  input: "lstm_1/while/EmptyTensorList_14/max_num_elements"
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_15/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_15/max_num_elements"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_15"
  op: "EmptyTensorList"
  input: "lstm_1/while/EmptyTensorList_15/element_shape"
  input: "lstm_1/while/EmptyTensorList_15/max_num_elements"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_16/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_16/max_num_elements"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_16"
  op: "EmptyTensorList"
  input: "lstm_1/while/EmptyTensorList_16/element_shape"
  input: "lstm_1/while/EmptyTensorList_16/max_num_elements"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_17/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_17/max_num_elements"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_17"
  op: "EmptyTensorList"
  input: "lstm_1/while/EmptyTensorList_17/element_shape"
  input: "lstm_1/while/EmptyTensorList_17/max_num_elements"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_18/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_18/max_num_elements"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_18"
  op: "EmptyTensorList"
  input: "lstm_1/while/EmptyTensorList_18/element_shape"
  input: "lstm_1/while/EmptyTensorList_18/max_num_elements"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_19/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_19/max_num_elements"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_19"
  op: "EmptyTensorList"
  input: "lstm_1/while/EmptyTensorList_19/element_shape"
  input: "lstm_1/while/EmptyTensorList_19/max_num_elements"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_20/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_20/max_num_elements"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_20"
  op: "EmptyTensorList"
  input: "lstm_1/while/EmptyTensorList_20/element_shape"
  input: "lstm_1/while/EmptyTensorList_20/max_num_elements"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_21/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_21/max_num_elements"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_21"
  op: "EmptyTensorList"
  input: "lstm_1/while/EmptyTensorList_21/element_shape"
  input: "lstm_1/while/EmptyTensorList_21/max_num_elements"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_22/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_22/max_num_elements"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_22"
  op: "EmptyTensorList"
  input: "lstm_1/while/EmptyTensorList_22/element_shape"
  input: "lstm_1/while/EmptyTensorList_22/max_num_elements"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_23/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_23/max_num_elements"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_23"
  op: "EmptyTensorList"
  input: "lstm_1/while/EmptyTensorList_23/element_shape"
  input: "lstm_1/while/EmptyTensorList_23/max_num_elements"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_24/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_24/max_num_elements"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_24"
  op: "EmptyTensorList"
  input: "lstm_1/while/EmptyTensorList_24/element_shape"
  input: "lstm_1/while/EmptyTensorList_24/max_num_elements"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_25/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_25/max_num_elements"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_25"
  op: "EmptyTensorList"
  input: "lstm_1/while/EmptyTensorList_25/element_shape"
  input: "lstm_1/while/EmptyTensorList_25/max_num_elements"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_26/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_26/max_num_elements"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_26"
  op: "EmptyTensorList"
  input: "lstm_1/while/EmptyTensorList_26/element_shape"
  input: "lstm_1/while/EmptyTensorList_26/max_num_elements"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_27/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_27/max_num_elements"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_27"
  op: "EmptyTensorList"
  input: "lstm_1/while/EmptyTensorList_27/element_shape"
  input: "lstm_1/while/EmptyTensorList_27/max_num_elements"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/while/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_28/max_num_elements"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_28"
  op: "EmptyTensorList"
  input: "lstm_1/while/Const_4"
  input: "lstm_1/while/EmptyTensorList_28/max_num_elements"
  attr {
    key: "element_dtype"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/while/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_29/max_num_elements"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_29"
  op: "EmptyTensorList"
  input: "lstm_1/while/Const_5"
  input: "lstm_1/while/EmptyTensorList_29/max_num_elements"
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/while/Const_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_30/max_num_elements"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_30"
  op: "EmptyTensorList"
  input: "lstm_1/while/Const_6"
  input: "lstm_1/while/EmptyTensorList_30/max_num_elements"
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/while/Const_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_31/max_num_elements"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_31"
  op: "EmptyTensorList"
  input: "lstm_1/while/Const_7"
  input: "lstm_1/while/EmptyTensorList_31/max_num_elements"
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/while/Const_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_32/max_num_elements"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_1/while/EmptyTensorList_32"
  op: "EmptyTensorList"
  input: "lstm_1/while/Const_8"
  input: "lstm_1/while/EmptyTensorList_32/max_num_elements"
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/while"
  op: "While"
  input: "lstm_1/while/loop_counter"
  input: "lstm_1/while/maximum_iterations"
  input: "lstm_1/time"
  input: "lstm_1/TensorArrayV2_1"
  input: "lstm_1/zeros"
  input: "lstm_1/zeros_1"
  input: "lstm_1/strided_slice_1"
  input: "lstm_1/TensorArrayUnstack/TensorListFromTensor"
  input: "lstm_1/lstm_cell/kernel"
  input: "lstm_1/lstm_cell/recurrent_kernel"
  input: "lstm_1/lstm_cell/bias"
  input: "lstm_1/while/EmptyTensorList"
  input: "lstm_1/while/EmptyTensorList_1"
  input: "lstm_1/while/EmptyTensorList_2"
  input: "lstm_1/while/EmptyTensorList_3"
  input: "lstm_1/while/EmptyTensorList_4"
  input: "lstm_1/while/EmptyTensorList_5"
  input: "lstm_1/while/EmptyTensorList_6"
  input: "lstm_1/while/EmptyTensorList_7"
  input: "lstm_1/while/EmptyTensorList_8"
  input: "lstm_1/while/EmptyTensorList_9"
  input: "lstm_1/while/EmptyTensorList_10"
  input: "lstm_1/while/EmptyTensorList_11"
  input: "lstm_1/while/EmptyTensorList_12"
  input: "lstm_1/while/EmptyTensorList_13"
  input: "lstm_1/while/EmptyTensorList_14"
  input: "lstm_1/while/EmptyTensorList_15"
  input: "lstm_1/while/EmptyTensorList_16"
  input: "lstm_1/while/EmptyTensorList_17"
  input: "lstm_1/while/EmptyTensorList_18"
  input: "lstm_1/while/EmptyTensorList_19"
  input: "lstm_1/while/EmptyTensorList_20"
  input: "lstm_1/while/EmptyTensorList_21"
  input: "lstm_1/while/EmptyTensorList_22"
  input: "lstm_1/while/EmptyTensorList_23"
  input: "lstm_1/while/EmptyTensorList_24"
  input: "lstm_1/while/EmptyTensorList_25"
  input: "lstm_1/while/EmptyTensorList_26"
  input: "lstm_1/while/EmptyTensorList_27"
  input: "lstm_1/while/EmptyTensorList_28"
  input: "lstm_1/while/EmptyTensorList_29"
  input: "lstm_1/while/EmptyTensorList_30"
  input: "lstm_1/while/EmptyTensorList_31"
  input: "lstm_1/while/EmptyTensorList_32"
  attr {
    key: "T"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_VARIANT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_VARIANT
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_num_original_outputs"
    value {
      i: 11
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
        i: 8
        i: 9
        i: 10
      }
    }
  }
  attr {
    key: "_stateful_parallelism"
    value {
      b: false
    }
  }
  attr {
    key: "body"
    value {
      func {
        name: "lstm_1_while_body_101"
      }
    }
  }
  attr {
    key: "cond"
    value {
      func {
        name: "lstm_1_while_cond_100"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm_1/while/Identity"
  op: "Identity"
  input: "lstm_1/while"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/while/Identity_1"
  op: "Identity"
  input: "lstm_1/while:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/while/Identity_2"
  op: "Identity"
  input: "lstm_1/while:2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/while/Identity_3"
  op: "Identity"
  input: "lstm_1/while:3"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "lstm_1/while/Identity_4"
  op: "Identity"
  input: "lstm_1/while:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/while/Identity_5"
  op: "Identity"
  input: "lstm_1/while:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/while/Identity_6"
  op: "Identity"
  input: "lstm_1/while:6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/while/Identity_7"
  op: "Identity"
  input: "lstm_1/while:7"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "lstm_1/while/Identity_8"
  op: "Identity"
  input: "lstm_1/while:8"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "lstm_1/while/Identity_9"
  op: "Identity"
  input: "lstm_1/while:9"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "lstm_1/while/Identity_10"
  op: "Identity"
  input: "lstm_1/while:10"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
}
node {
  name: "lstm_1/while/Identity_11"
  op: "Identity"
  input: "lstm_1/while:11"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "lstm_1/while/Identity_12"
  op: "Identity"
  input: "lstm_1/while:12"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "lstm_1/while/Identity_13"
  op: "Identity"
  input: "lstm_1/while:13"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "lstm_1/while/Identity_14"
  op: "Identity"
  input: "lstm_1/while:14"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "lstm_1/while/Identity_15"
  op: "Identity"
  input: "lstm_1/while:15"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "lstm_1/while/Identity_16"
  op: "Identity"
  input: "lstm_1/while:16"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "lstm_1/while/Identity_17"
  op: "Identity"
  input: "lstm_1/while:17"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "lstm_1/while/Identity_18"
  op: "Identity"
  input: "lstm_1/while:18"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "lstm_1/while/Identity_19"
  op: "Identity"
  input: "lstm_1/while:19"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "lstm_1/while/Identity_20"
  op: "Identity"
  input: "lstm_1/while:20"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "lstm_1/while/Identity_21"
  op: "Identity"
  input: "lstm_1/while:21"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "lstm_1/while/Identity_22"
  op: "Identity"
  input: "lstm_1/while:22"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "lstm_1/while/Identity_23"
  op: "Identity"
  input: "lstm_1/while:23"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "lstm_1/while/Identity_24"
  op: "Identity"
  input: "lstm_1/while:24"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "lstm_1/while/Identity_25"
  op: "Identity"
  input: "lstm_1/while:25"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "lstm_1/while/Identity_26"
  op: "Identity"
  input: "lstm_1/while:26"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "lstm_1/while/Identity_27"
  op: "Identity"
  input: "lstm_1/while:27"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "lstm_1/while/Identity_28"
  op: "Identity"
  input: "lstm_1/while:28"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "lstm_1/while/Identity_29"
  op: "Identity"
  input: "lstm_1/while:29"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "lstm_1/while/Identity_30"
  op: "Identity"
  input: "lstm_1/while:30"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "lstm_1/while/Identity_31"
  op: "Identity"
  input: "lstm_1/while:31"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "lstm_1/while/Identity_32"
  op: "Identity"
  input: "lstm_1/while:32"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "lstm_1/while/Identity_33"
  op: "Identity"
  input: "lstm_1/while:33"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "lstm_1/while/Identity_34"
  op: "Identity"
  input: "lstm_1/while:34"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "lstm_1/while/Identity_35"
  op: "Identity"
  input: "lstm_1/while:35"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "lstm_1/while/Identity_36"
  op: "Identity"
  input: "lstm_1/while:36"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "lstm_1/while/Identity_37"
  op: "Identity"
  input: "lstm_1/while:37"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "lstm_1/while/Identity_38"
  op: "Identity"
  input: "lstm_1/while:38"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "lstm_1/while/Identity_39"
  op: "Identity"
  input: "lstm_1/while:39"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "lstm_1/while/Identity_40"
  op: "Identity"
  input: "lstm_1/while:40"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "lstm_1/while/Identity_41"
  op: "Identity"
  input: "lstm_1/while:41"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "lstm_1/while/Identity_42"
  op: "Identity"
  input: "lstm_1/while:42"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "lstm_1/while/Identity_43"
  op: "Identity"
  input: "lstm_1/while:43"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "lstm_1/TensorArrayV2Stack/TensorListStack/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_1/TensorArrayV2Stack/TensorListStack"
  op: "TensorListStack"
  input: "lstm_1/while/Identity_3"
  input: "lstm_1/TensorArrayV2Stack/TensorListStack/element_shape"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_elements"
    value {
      i: -1
    }
  }
}
node {
  name: "lstm_1/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_1/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm_1/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm_1/strided_slice_3"
  op: "StridedSlice"
  input: "lstm_1/TensorArrayV2Stack/TensorListStack"
  input: "lstm_1/strided_slice_3/stack"
  input: "lstm_1/strided_slice_3/stack_1"
  input: "lstm_1/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "lstm_1/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_1/transpose_1"
  op: "Transpose"
  input: "lstm_1/TensorArrayV2Stack/TensorListStack"
  input: "lstm_1/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/runtime"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "flatten/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\200\014\000\000"
      }
    }
  }
}
node {
  name: "flatten/Reshape"
  op: "Reshape"
  input: "lstm_1/transpose_1"
  input: "flatten/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\014\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.042874645441770554
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.042874645441770554
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dense_1/kernel/Initializer/random_uniform/max"
  input: "dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/random_uniform"
  op: "AddV2"
  input: "dense_1/kernel/Initializer/random_uniform/mul"
  input: "dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
}
node {
  name: "dense_1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3200
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_1/kernel"
    }
  }
}
node {
  name: "dense_1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel"
}
node {
  name: "dense_1/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense_1/kernel"
  input: "dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_1/bias"
    }
  }
}
node {
  name: "dense_1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_1/bias"
}
node {
  name: "dense_1/bias/Assign"
  op: "AssignVariableOp"
  input: "dense_1/bias"
  input: "dense_1/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/MatMul"
  op: "MatMul"
  input: "flatten/Reshape"
  input: "dense_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/BiasAdd"
  op: "BiasAdd"
  input: "dense_1/MatMul"
  input: "dense_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense_1/Relu"
  op: "Relu"
  input: "dense_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "output/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.2907009422779083
      }
    }
  }
}
node {
  name: "output/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2907009422779083
      }
    }
  }
}
node {
  name: "output/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "output/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "output/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "output/kernel/Initializer/random_uniform/max"
  input: "output/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/kernel"
      }
    }
  }
}
node {
  name: "output/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "output/kernel/Initializer/random_uniform/RandomUniform"
  input: "output/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/kernel"
      }
    }
  }
}
node {
  name: "output/kernel/Initializer/random_uniform"
  op: "AddV2"
  input: "output/kernel/Initializer/random_uniform/mul"
  input: "output/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/kernel"
      }
    }
  }
}
node {
  name: "output/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/kernel"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "output/kernel"
    }
  }
}
node {
  name: "output/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "output/kernel"
}
node {
  name: "output/kernel/Assign"
  op: "AssignVariableOp"
  input: "output/kernel"
  input: "output/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "output/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "output/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/bias"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "output/bias"
    }
  }
}
node {
  name: "output/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "output/bias"
}
node {
  name: "output/bias/Assign"
  op: "AssignVariableOp"
  input: "output/bias"
  input: "output/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "output/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "output/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output/MatMul"
  op: "MatMul"
  input: "dense_1/Relu"
  input: "output/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "output/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "output/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output/BiasAdd"
  op: "BiasAdd"
  input: "output/MatMul"
  input: "output/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "output/Softmax"
  op: "Softmax"
  input: "output/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp"
  op: "AssignVariableOp"
  input: "lstm_1/lstm_cell/kernel"
  input: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp"
  op: "ReadVariableOp"
  input: "lstm_1/lstm_cell/kernel"
  input: "^AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "lstm_1/lstm_cell/recurrent_kernel"
  input: "Placeholder_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "lstm_1/lstm_cell/recurrent_kernel"
  input: "^AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "lstm_1/lstm_cell/bias"
  input: "Placeholder_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "lstm_1/lstm_cell/bias"
  input: "^AssignVariableOp_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_3"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "dense_1/kernel"
  input: "Placeholder_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "dense_1/kernel"
  input: "^AssignVariableOp_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_4"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "dense_1/bias"
  input: "Placeholder_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "dense_1/bias"
  input: "^AssignVariableOp_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_5"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "output/kernel"
  input: "Placeholder_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "output/kernel"
  input: "^AssignVariableOp_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_6"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "output/bias"
  input: "Placeholder_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "output/bias"
  input: "^AssignVariableOp_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "lstm_1/lstm_cell/kernel"
}
node {
  name: "VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "lstm_1/lstm_cell/bias"
}
node {
  name: "VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel"
}
node {
  name: "VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "dense_1/bias"
}
node {
  name: "VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "output/bias"
}
node {
  name: "VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "lstm_1/lstm_cell/recurrent_kernel"
}
node {
  name: "VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "output/kernel"
}
node {
  name: "init"
  op: "NoOp"
  input: "^dense_1/bias/Assign"
  input: "^dense_1/kernel/Assign"
  input: "^lstm_1/lstm_cell/bias/Assign"
  input: "^lstm_1/lstm_cell/kernel/Assign"
  input: "^lstm_1/lstm_cell/recurrent_kernel/Assign"
  input: "^output/bias/Assign"
  input: "^output/kernel/Assign"
}
node {
  name: "total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "total"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "total"
    }
  }
}
node {
  name: "total/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "total"
}
node {
  name: "total/Assign"
  op: "AssignVariableOp"
  input: "total"
  input: "total/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "total/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "count"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "count"
    }
  }
}
node {
  name: "count/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "count"
}
node {
  name: "count/Assign"
  op: "AssignVariableOp"
  input: "count"
  input: "count/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_target"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "metrics/accuracy/Squeeze"
  op: "Squeeze"
  input: "output_target"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: -1
      }
    }
  }
}
node {
  name: "metrics/accuracy/ArgMax/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics/accuracy/ArgMax"
  op: "ArgMax"
  input: "output/Softmax"
  input: "metrics/accuracy/ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics/accuracy/Cast"
  op: "Cast"
  input: "metrics/accuracy/ArgMax"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/accuracy/Equal"
  op: "Equal"
  input: "metrics/accuracy/Squeeze"
  input: "metrics/accuracy/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "metrics/accuracy/Cast_1"
  op: "Cast"
  input: "metrics/accuracy/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/accuracy/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics/accuracy/Sum"
  op: "Sum"
  input: "metrics/accuracy/Cast_1"
  input: "metrics/accuracy/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/accuracy/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "total"
  input: "metrics/accuracy/Sum"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/accuracy/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total"
  input: "^metrics/accuracy/AssignAddVariableOp"
  input: "^metrics/accuracy/Sum"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/accuracy/Size"
  op: "Size"
  input: "metrics/accuracy/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "metrics/accuracy/Cast_2"
  op: "Cast"
  input: "metrics/accuracy/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/accuracy/AssignAddVariableOp_1"
  op: "AssignAddVariableOp"
  input: "count"
  input: "metrics/accuracy/Cast_2"
  input: "^metrics/accuracy/AssignAddVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/accuracy/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "count"
  input: "^metrics/accuracy/AssignAddVariableOp"
  input: "^metrics/accuracy/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/accuracy/div_no_nan/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total"
  input: "^metrics/accuracy/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/accuracy/div_no_nan/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "count"
  input: "^metrics/accuracy/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/accuracy/div_no_nan"
  op: "DivNoNan"
  input: "metrics/accuracy/div_no_nan/ReadVariableOp"
  input: "metrics/accuracy/div_no_nan/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/accuracy/Identity"
  op: "Identity"
  input: "metrics/accuracy/div_no_nan"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/output_loss/Cast"
  op: "Cast"
  input: "output_target"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "loss/output_loss/Shape"
  op: "Shape"
  input: "output/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/output_loss/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/output_loss/Reshape"
  op: "Reshape"
  input: "loss/output_loss/Cast"
  input: "loss/output_loss/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/output_loss/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/output_loss/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/output_loss/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/output_loss/strided_slice"
  op: "StridedSlice"
  input: "loss/output_loss/Shape"
  input: "loss/output_loss/strided_slice/stack"
  input: "loss/output_loss/strided_slice/stack_1"
  input: "loss/output_loss/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "loss/output_loss/Reshape_1/shape/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/output_loss/Reshape_1/shape"
  op: "Pack"
  input: "loss/output_loss/Reshape_1/shape/0"
  input: "loss/output_loss/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/output_loss/Reshape_1"
  op: "Reshape"
  input: "output/BiasAdd"
  input: "loss/output_loss/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/output_loss/SparseSoftmaxCrossEntropyWithLogits/Shape"
  op: "Shape"
  input: "loss/output_loss/Reshape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/output_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "loss/output_loss/Reshape_1"
  input: "loss/output_loss/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "loss/output_loss/weighted_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/output_loss/weighted_loss/Mul"
  op: "Mul"
  input: "loss/output_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  input: "loss/output_loss/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/output_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/output_loss/Sum"
  op: "Sum"
  input: "loss/output_loss/weighted_loss/Mul"
  input: "loss/output_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/output_loss/num_elements"
  op: "Size"
  input: "loss/output_loss/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/output_loss/num_elements/Cast"
  op: "Cast"
  input: "loss/output_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "loss/output_loss/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/output_loss/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/output_loss/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/output_loss/range"
  op: "Range"
  input: "loss/output_loss/range/start"
  input: "loss/output_loss/Rank"
  input: "loss/output_loss/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/output_loss/Sum_1"
  op: "Sum"
  input: "loss/output_loss/Sum"
  input: "loss/output_loss/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/output_loss/value"
  op: "DivNoNan"
  input: "loss/output_loss/Sum_1"
  input: "loss/output_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/mul"
  op: "Mul"
  input: "loss/mul/x"
  input: "loss/output_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lstm_1/lstm_cell/kernel/Regularizer/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "lstm_1/lstm_cell/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lstm_1/lstm_cell/kernel/Regularizer/Square"
  op: "Square"
  input: "loss/lstm_1/lstm_cell/kernel/Regularizer/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lstm_1/lstm_cell/kernel/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/lstm_1/lstm_cell/kernel/Regularizer/Sum"
  op: "Sum"
  input: "loss/lstm_1/lstm_cell/kernel/Regularizer/Square"
  input: "loss/lstm_1/lstm_cell/kernel/Regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/lstm_1/lstm_cell/kernel/Regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/lstm_1/lstm_cell/kernel/Regularizer/mul"
  op: "Mul"
  input: "loss/lstm_1/lstm_cell/kernel/Regularizer/mul/x"
  input: "loss/lstm_1/lstm_cell/kernel/Regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lstm_1/lstm_cell/bias/Regularizer/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "lstm_1/lstm_cell/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lstm_1/lstm_cell/bias/Regularizer/Square"
  op: "Square"
  input: "loss/lstm_1/lstm_cell/bias/Regularizer/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lstm_1/lstm_cell/bias/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/lstm_1/lstm_cell/bias/Regularizer/Sum"
  op: "Sum"
  input: "loss/lstm_1/lstm_cell/bias/Regularizer/Square"
  input: "loss/lstm_1/lstm_cell/bias/Regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/lstm_1/lstm_cell/bias/Regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/lstm_1/lstm_cell/bias/Regularizer/mul"
  op: "Mul"
  input: "loss/lstm_1/lstm_cell/bias/Regularizer/mul/x"
  input: "loss/lstm_1/lstm_cell/bias/Regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_1/kernel/Regularizer/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_1/kernel/Regularizer/Square"
  op: "Square"
  input: "loss/dense_1/kernel/Regularizer/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_1/kernel/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/dense_1/kernel/Regularizer/Sum"
  op: "Sum"
  input: "loss/dense_1/kernel/Regularizer/Square"
  input: "loss/dense_1/kernel/Regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/dense_1/kernel/Regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/dense_1/kernel/Regularizer/mul"
  op: "Mul"
  input: "loss/dense_1/kernel/Regularizer/mul/x"
  input: "loss/dense_1/kernel/Regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_1/bias/Regularizer/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_1/bias/Regularizer/Square"
  op: "Square"
  input: "loss/dense_1/bias/Regularizer/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_1/bias/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/dense_1/bias/Regularizer/Sum"
  op: "Sum"
  input: "loss/dense_1/bias/Regularizer/Square"
  input: "loss/dense_1/bias/Regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/dense_1/bias/Regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/dense_1/bias/Regularizer/mul"
  op: "Mul"
  input: "loss/dense_1/bias/Regularizer/mul/x"
  input: "loss/dense_1/bias/Regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/output/kernel/Regularizer/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "output/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/output/kernel/Regularizer/Square"
  op: "Square"
  input: "loss/output/kernel/Regularizer/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/output/kernel/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/output/kernel/Regularizer/Sum"
  op: "Sum"
  input: "loss/output/kernel/Regularizer/Square"
  input: "loss/output/kernel/Regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/output/kernel/Regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/output/kernel/Regularizer/mul"
  op: "Mul"
  input: "loss/output/kernel/Regularizer/mul/x"
  input: "loss/output/kernel/Regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/output/bias/Regularizer/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "output/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/output/bias/Regularizer/Square"
  op: "Square"
  input: "loss/output/bias/Regularizer/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/output/bias/Regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/output/bias/Regularizer/Sum"
  op: "Sum"
  input: "loss/output/bias/Regularizer/Square"
  input: "loss/output/bias/Regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/output/bias/Regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/output/bias/Regularizer/mul"
  op: "Mul"
  input: "loss/output/bias/Regularizer/mul/x"
  input: "loss/output/bias/Regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lstm_1/lstm_cell/kernel/Regularizer_1/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "lstm_1/lstm_cell/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lstm_1/lstm_cell/kernel/Regularizer_1/Square"
  op: "Square"
  input: "loss/lstm_1/lstm_cell/kernel/Regularizer_1/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lstm_1/lstm_cell/kernel/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/lstm_1/lstm_cell/kernel/Regularizer_1/Sum"
  op: "Sum"
  input: "loss/lstm_1/lstm_cell/kernel/Regularizer_1/Square"
  input: "loss/lstm_1/lstm_cell/kernel/Regularizer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/lstm_1/lstm_cell/kernel/Regularizer_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/lstm_1/lstm_cell/kernel/Regularizer_1/mul"
  op: "Mul"
  input: "loss/lstm_1/lstm_cell/kernel/Regularizer_1/mul/x"
  input: "loss/lstm_1/lstm_cell/kernel/Regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lstm_1/lstm_cell/bias/Regularizer_1/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "lstm_1/lstm_cell/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lstm_1/lstm_cell/bias/Regularizer_1/Square"
  op: "Square"
  input: "loss/lstm_1/lstm_cell/bias/Regularizer_1/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lstm_1/lstm_cell/bias/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/lstm_1/lstm_cell/bias/Regularizer_1/Sum"
  op: "Sum"
  input: "loss/lstm_1/lstm_cell/bias/Regularizer_1/Square"
  input: "loss/lstm_1/lstm_cell/bias/Regularizer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/lstm_1/lstm_cell/bias/Regularizer_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/lstm_1/lstm_cell/bias/Regularizer_1/mul"
  op: "Mul"
  input: "loss/lstm_1/lstm_cell/bias/Regularizer_1/mul/x"
  input: "loss/lstm_1/lstm_cell/bias/Regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_1/kernel/Regularizer_1/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_1/kernel/Regularizer_1/Square"
  op: "Square"
  input: "loss/dense_1/kernel/Regularizer_1/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_1/kernel/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/dense_1/kernel/Regularizer_1/Sum"
  op: "Sum"
  input: "loss/dense_1/kernel/Regularizer_1/Square"
  input: "loss/dense_1/kernel/Regularizer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/dense_1/kernel/Regularizer_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/dense_1/kernel/Regularizer_1/mul"
  op: "Mul"
  input: "loss/dense_1/kernel/Regularizer_1/mul/x"
  input: "loss/dense_1/kernel/Regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_1/bias/Regularizer_1/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_1/bias/Regularizer_1/Square"
  op: "Square"
  input: "loss/dense_1/bias/Regularizer_1/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_1/bias/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/dense_1/bias/Regularizer_1/Sum"
  op: "Sum"
  input: "loss/dense_1/bias/Regularizer_1/Square"
  input: "loss/dense_1/bias/Regularizer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/dense_1/bias/Regularizer_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/dense_1/bias/Regularizer_1/mul"
  op: "Mul"
  input: "loss/dense_1/bias/Regularizer_1/mul/x"
  input: "loss/dense_1/bias/Regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/output/kernel/Regularizer_1/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "output/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/output/kernel/Regularizer_1/Square"
  op: "Square"
  input: "loss/output/kernel/Regularizer_1/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/output/kernel/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/output/kernel/Regularizer_1/Sum"
  op: "Sum"
  input: "loss/output/kernel/Regularizer_1/Square"
  input: "loss/output/kernel/Regularizer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/output/kernel/Regularizer_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/output/kernel/Regularizer_1/mul"
  op: "Mul"
  input: "loss/output/kernel/Regularizer_1/mul/x"
  input: "loss/output/kernel/Regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/output/bias/Regularizer_1/Square/ReadVariableOp"
  op: "ReadVariableOp"
  input: "output/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/output/bias/Regularizer_1/Square"
  op: "Square"
  input: "loss/output/bias/Regularizer_1/Square/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/output/bias/Regularizer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/output/bias/Regularizer_1/Sum"
  op: "Sum"
  input: "loss/output/bias/Regularizer_1/Square"
  input: "loss/output/bias/Regularizer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/output/bias/Regularizer_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/output/bias/Regularizer_1/mul"
  op: "Mul"
  input: "loss/output/bias/Regularizer_1/mul/x"
  input: "loss/output/bias/Regularizer_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/AddN"
  op: "AddN"
  input: "loss/lstm_1/lstm_cell/kernel/Regularizer/mul"
  input: "loss/lstm_1/lstm_cell/bias/Regularizer/mul"
  input: "loss/dense_1/kernel/Regularizer/mul"
  input: "loss/dense_1/bias/Regularizer/mul"
  input: "loss/output/kernel/Regularizer/mul"
  input: "loss/output/bias/Regularizer/mul"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/AddN_1"
  op: "AddN"
  input: "loss/mul"
  input: "loss/AddN"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "iter/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@iter"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "iter"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@iter"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "iter"
    }
  }
}
node {
  name: "iter/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "iter"
}
node {
  name: "iter/Assign"
  op: "AssignVariableOp"
  input: "iter"
  input: "iter/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "iter/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "iter"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "beta_1/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@beta_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "beta_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@beta_1"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "beta_1"
    }
  }
}
node {
  name: "beta_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "beta_1"
}
node {
  name: "beta_1/Assign"
  op: "AssignVariableOp"
  input: "beta_1"
  input: "beta_1/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta_2/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@beta_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "beta_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@beta_2"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "beta_2"
    }
  }
}
node {
  name: "beta_2/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "beta_2"
}
node {
  name: "beta_2/Assign"
  op: "AssignVariableOp"
  input: "beta_2"
  input: "beta_2/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta_2/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decay/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decay"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decay"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decay"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "decay"
    }
  }
}
node {
  name: "decay/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "decay"
}
node {
  name: "decay/Assign"
  op: "AssignVariableOp"
  input: "decay"
  input: "decay/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decay/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "decay"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "learning_rate/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@learning_rate"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "learning_rate"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@learning_rate"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "learning_rate"
    }
  }
}
node {
  name: "learning_rate/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "learning_rate"
}
node {
  name: "learning_rate/Assign"
  op: "AssignVariableOp"
  input: "learning_rate"
  input: "learning_rate/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "learning_rate/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/lstm_cell/kernel/m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\t\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_1/lstm_cell/kernel/m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm_1/lstm_cell/kernel/m/Initializer/zeros"
  op: "Fill"
  input: "lstm_1/lstm_cell/kernel/m/Initializer/zeros/shape_as_tensor"
  input: "lstm_1/lstm_cell/kernel/m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/lstm_cell/kernel/m"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 9
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "lstm_1/lstm_cell/kernel/m"
    }
  }
}
node {
  name: "lstm_1/lstm_cell/kernel/m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "lstm_1/lstm_cell/kernel/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "lstm_1/lstm_cell/kernel/m/Assign"
  op: "AssignVariableOp"
  input: "lstm_1/lstm_cell/kernel/m"
  input: "lstm_1/lstm_cell/kernel/m/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/lstm_cell/kernel/m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "lstm_1/lstm_cell/kernel/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/lstm_cell/recurrent_kernel/m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_1/lstm_cell/recurrent_kernel/m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm_1/lstm_cell/recurrent_kernel/m/Initializer/zeros"
  op: "Fill"
  input: "lstm_1/lstm_cell/recurrent_kernel/m/Initializer/zeros/shape_as_tensor"
  input: "lstm_1/lstm_cell/recurrent_kernel/m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/recurrent_kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/lstm_cell/recurrent_kernel/m"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/recurrent_kernel"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "lstm_1/lstm_cell/recurrent_kernel/m"
    }
  }
}
node {
  name: "lstm_1/lstm_cell/recurrent_kernel/m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "lstm_1/lstm_cell/recurrent_kernel/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/recurrent_kernel"
      }
    }
  }
}
node {
  name: "lstm_1/lstm_cell/recurrent_kernel/m/Assign"
  op: "AssignVariableOp"
  input: "lstm_1/lstm_cell/recurrent_kernel/m"
  input: "lstm_1/lstm_cell/recurrent_kernel/m/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/lstm_cell/recurrent_kernel/m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "lstm_1/lstm_cell/recurrent_kernel/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/lstm_cell/bias/m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm_1/lstm_cell/bias/m"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "lstm_1/lstm_cell/bias/m"
    }
  }
}
node {
  name: "lstm_1/lstm_cell/bias/m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "lstm_1/lstm_cell/bias/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/bias"
      }
    }
  }
}
node {
  name: "lstm_1/lstm_cell/bias/m/Assign"
  op: "AssignVariableOp"
  input: "lstm_1/lstm_cell/bias/m"
  input: "lstm_1/lstm_cell/bias/m/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/lstm_cell/bias/m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "lstm_1/lstm_cell/bias/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel/m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\014\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "dense_1/kernel/m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_1/kernel/m/Initializer/zeros"
  op: "Fill"
  input: "dense_1/kernel/m/Initializer/zeros/shape_as_tensor"
  input: "dense_1/kernel/m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_1/kernel/m"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3200
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_1/kernel/m"
    }
  }
}
node {
  name: "dense_1/kernel/m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
}
node {
  name: "dense_1/kernel/m/Assign"
  op: "AssignVariableOp"
  input: "dense_1/kernel/m"
  input: "dense_1/kernel/m/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel/m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias/m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_1/bias/m"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_1/bias/m"
    }
  }
}
node {
  name: "dense_1/bias/m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_1/bias/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
}
node {
  name: "dense_1/bias/m/Assign"
  op: "AssignVariableOp"
  input: "dense_1/bias/m"
  input: "dense_1/bias/m/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias/m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/bias/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output/kernel/m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 7
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "output/kernel/m"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/kernel"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "output/kernel/m"
    }
  }
}
node {
  name: "output/kernel/m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "output/kernel/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/kernel"
      }
    }
  }
}
node {
  name: "output/kernel/m/Assign"
  op: "AssignVariableOp"
  input: "output/kernel/m"
  input: "output/kernel/m/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output/kernel/m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "output/kernel/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output/bias/m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "output/bias/m"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/bias"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "output/bias/m"
    }
  }
}
node {
  name: "output/bias/m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "output/bias/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/bias"
      }
    }
  }
}
node {
  name: "output/bias/m/Assign"
  op: "AssignVariableOp"
  input: "output/bias/m"
  input: "output/bias/m/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output/bias/m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "output/bias/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/lstm_cell/kernel/v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\t\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_1/lstm_cell/kernel/v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm_1/lstm_cell/kernel/v/Initializer/zeros"
  op: "Fill"
  input: "lstm_1/lstm_cell/kernel/v/Initializer/zeros/shape_as_tensor"
  input: "lstm_1/lstm_cell/kernel/v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/lstm_cell/kernel/v"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 9
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "lstm_1/lstm_cell/kernel/v"
    }
  }
}
node {
  name: "lstm_1/lstm_cell/kernel/v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "lstm_1/lstm_cell/kernel/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "lstm_1/lstm_cell/kernel/v/Assign"
  op: "AssignVariableOp"
  input: "lstm_1/lstm_cell/kernel/v"
  input: "lstm_1/lstm_cell/kernel/v/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/lstm_cell/kernel/v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "lstm_1/lstm_cell/kernel/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/lstm_cell/recurrent_kernel/v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_1/lstm_cell/recurrent_kernel/v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm_1/lstm_cell/recurrent_kernel/v/Initializer/zeros"
  op: "Fill"
  input: "lstm_1/lstm_cell/recurrent_kernel/v/Initializer/zeros/shape_as_tensor"
  input: "lstm_1/lstm_cell/recurrent_kernel/v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/recurrent_kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/lstm_cell/recurrent_kernel/v"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/recurrent_kernel"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "lstm_1/lstm_cell/recurrent_kernel/v"
    }
  }
}
node {
  name: "lstm_1/lstm_cell/recurrent_kernel/v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "lstm_1/lstm_cell/recurrent_kernel/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/recurrent_kernel"
      }
    }
  }
}
node {
  name: "lstm_1/lstm_cell/recurrent_kernel/v/Assign"
  op: "AssignVariableOp"
  input: "lstm_1/lstm_cell/recurrent_kernel/v"
  input: "lstm_1/lstm_cell/recurrent_kernel/v/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/lstm_cell/recurrent_kernel/v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "lstm_1/lstm_cell/recurrent_kernel/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/lstm_cell/bias/v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm_1/lstm_cell/bias/v"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "lstm_1/lstm_cell/bias/v"
    }
  }
}
node {
  name: "lstm_1/lstm_cell/bias/v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "lstm_1/lstm_cell/bias/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/bias"
      }
    }
  }
}
node {
  name: "lstm_1/lstm_cell/bias/v/Assign"
  op: "AssignVariableOp"
  input: "lstm_1/lstm_cell/bias/v"
  input: "lstm_1/lstm_cell/bias/v/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/lstm_cell/bias/v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "lstm_1/lstm_cell/bias/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel/v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\014\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "dense_1/kernel/v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_1/kernel/v/Initializer/zeros"
  op: "Fill"
  input: "dense_1/kernel/v/Initializer/zeros/shape_as_tensor"
  input: "dense_1/kernel/v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_1/kernel/v"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3200
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_1/kernel/v"
    }
  }
}
node {
  name: "dense_1/kernel/v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
}
node {
  name: "dense_1/kernel/v/Assign"
  op: "AssignVariableOp"
  input: "dense_1/kernel/v"
  input: "dense_1/kernel/v/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel/v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias/v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_1/bias/v"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_1/bias/v"
    }
  }
}
node {
  name: "dense_1/bias/v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_1/bias/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
}
node {
  name: "dense_1/bias/v/Assign"
  op: "AssignVariableOp"
  input: "dense_1/bias/v"
  input: "dense_1/bias/v/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias/v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/bias/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output/kernel/v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 7
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "output/kernel/v"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/kernel"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "output/kernel/v"
    }
  }
}
node {
  name: "output/kernel/v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "output/kernel/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/kernel"
      }
    }
  }
}
node {
  name: "output/kernel/v/Assign"
  op: "AssignVariableOp"
  input: "output/kernel/v"
  input: "output/kernel/v/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output/kernel/v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "output/kernel/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output/bias/v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "output/bias/v"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/bias"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "output/bias/v"
    }
  }
}
node {
  name: "output/bias/v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "output/bias/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/bias"
      }
    }
  }
}
node {
  name: "output/bias/v/Assign"
  op: "AssignVariableOp"
  input: "output/bias/v"
  input: "output/bias/v/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output/bias/v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "output/bias/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "learning_rate"
}
node {
  name: "VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "lstm_1/lstm_cell/kernel/m"
}
node {
  name: "VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "dense_1/bias/m"
}
node {
  name: "VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "output/kernel/m"
}
node {
  name: "VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "beta_2"
}
node {
  name: "VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "output/kernel/v"
}
node {
  name: "VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "iter"
}
node {
  name: "VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "beta_1"
}
node {
  name: "VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "output/bias/m"
}
node {
  name: "VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "lstm_1/lstm_cell/recurrent_kernel/v"
}
node {
  name: "VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "lstm_1/lstm_cell/kernel/v"
}
node {
  name: "VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "decay"
}
node {
  name: "VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel/m"
}
node {
  name: "VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "dense_1/bias/v"
}
node {
  name: "VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "count"
}
node {
  name: "VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "output/bias/v"
}
node {
  name: "VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "lstm_1/lstm_cell/bias/m"
}
node {
  name: "VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "total"
}
node {
  name: "VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "lstm_1/lstm_cell/recurrent_kernel/m"
}
node {
  name: "VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "lstm_1/lstm_cell/bias/v"
}
node {
  name: "VarIsInitializedOp_27"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel/v"
}
node {
  name: "init_1"
  op: "NoOp"
  input: "^beta_1/Assign"
  input: "^beta_2/Assign"
  input: "^count/Assign"
  input: "^decay/Assign"
  input: "^dense_1/bias/m/Assign"
  input: "^dense_1/bias/v/Assign"
  input: "^dense_1/kernel/m/Assign"
  input: "^dense_1/kernel/v/Assign"
  input: "^iter/Assign"
  input: "^learning_rate/Assign"
  input: "^lstm_1/lstm_cell/bias/m/Assign"
  input: "^lstm_1/lstm_cell/bias/v/Assign"
  input: "^lstm_1/lstm_cell/kernel/m/Assign"
  input: "^lstm_1/lstm_cell/kernel/v/Assign"
  input: "^lstm_1/lstm_cell/recurrent_kernel/m/Assign"
  input: "^lstm_1/lstm_cell/recurrent_kernel/v/Assign"
  input: "^output/bias/m/Assign"
  input: "^output/bias/v/Assign"
  input: "^output/kernel/m/Assign"
  input: "^output/kernel/v/Assign"
  input: "^total/Assign"
}
node {
  name: "Placeholder_7"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "iter"
  input: "Placeholder_7"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "iter"
  input: "^AssignVariableOp_7"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Placeholder_8"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "lstm_1/lstm_cell/kernel/m"
  input: "Placeholder_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_8"
  op: "ReadVariableOp"
  input: "lstm_1/lstm_cell/kernel/m"
  input: "^AssignVariableOp_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_9"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "lstm_1/lstm_cell/recurrent_kernel/m"
  input: "Placeholder_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_9"
  op: "ReadVariableOp"
  input: "lstm_1/lstm_cell/recurrent_kernel/m"
  input: "^AssignVariableOp_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_10"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "lstm_1/lstm_cell/bias/m"
  input: "Placeholder_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_10"
  op: "ReadVariableOp"
  input: "lstm_1/lstm_cell/bias/m"
  input: "^AssignVariableOp_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_11"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "dense_1/kernel/m"
  input: "Placeholder_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_11"
  op: "ReadVariableOp"
  input: "dense_1/kernel/m"
  input: "^AssignVariableOp_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_12"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "dense_1/bias/m"
  input: "Placeholder_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_12"
  op: "ReadVariableOp"
  input: "dense_1/bias/m"
  input: "^AssignVariableOp_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_13"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "output/kernel/m"
  input: "Placeholder_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_13"
  op: "ReadVariableOp"
  input: "output/kernel/m"
  input: "^AssignVariableOp_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_14"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "output/bias/m"
  input: "Placeholder_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_14"
  op: "ReadVariableOp"
  input: "output/bias/m"
  input: "^AssignVariableOp_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_15"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "lstm_1/lstm_cell/kernel/v"
  input: "Placeholder_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_15"
  op: "ReadVariableOp"
  input: "lstm_1/lstm_cell/kernel/v"
  input: "^AssignVariableOp_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_16"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "lstm_1/lstm_cell/recurrent_kernel/v"
  input: "Placeholder_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_16"
  op: "ReadVariableOp"
  input: "lstm_1/lstm_cell/recurrent_kernel/v"
  input: "^AssignVariableOp_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_17"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "lstm_1/lstm_cell/bias/v"
  input: "Placeholder_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_17"
  op: "ReadVariableOp"
  input: "lstm_1/lstm_cell/bias/v"
  input: "^AssignVariableOp_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_18"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_18"
  op: "AssignVariableOp"
  input: "dense_1/kernel/v"
  input: "Placeholder_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_18"
  op: "ReadVariableOp"
  input: "dense_1/kernel/v"
  input: "^AssignVariableOp_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_19"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_19"
  op: "AssignVariableOp"
  input: "dense_1/bias/v"
  input: "Placeholder_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_19"
  op: "ReadVariableOp"
  input: "dense_1/bias/v"
  input: "^AssignVariableOp_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_20"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_20"
  op: "AssignVariableOp"
  input: "output/kernel/v"
  input: "Placeholder_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_20"
  op: "ReadVariableOp"
  input: "output/kernel/v"
  input: "^AssignVariableOp_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_21"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_21"
  op: "AssignVariableOp"
  input: "output/bias/v"
  input: "Placeholder_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_21"
  op: "ReadVariableOp"
  input: "output/bias/v"
  input: "^AssignVariableOp_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
library {
  function {
    signature {
      name: "lstm_1_while_cond_100"
      input_arg {
        name: "lstm_1_while_loop_counter"
        type: DT_INT32
      }
      input_arg {
        name: "lstm_1_while_maximum_iterations"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_2"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_3"
        type: DT_FLOAT
      }
      input_arg {
        name: "less_lstm_1_strided_slice_1"
        type: DT_INT32
      }
      input_arg {
        name: "lstm_1_while_cond_100___redundant_placeholder0"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_1_while_cond_100___redundant_placeholder1"
        type: DT_RESOURCE
      }
      input_arg {
        name: "lstm_1_while_cond_100___redundant_placeholder2"
        type: DT_RESOURCE
      }
      input_arg {
        name: "lstm_1_while_cond_100___redundant_placeholder3"
        type: DT_RESOURCE
      }
      input_arg {
        name: "lstm_1_while_emptytensorlist"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_1_while_emptytensorlist_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_1_while_emptytensorlist_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_1_while_emptytensorlist_3"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_1_while_emptytensorlist_4"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_1_while_emptytensorlist_5"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_1_while_emptytensorlist_6"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_1_while_emptytensorlist_7"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_1_while_emptytensorlist_8"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_1_while_emptytensorlist_9"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_1_while_emptytensorlist_10"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_1_while_emptytensorlist_11"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_1_while_emptytensorlist_12"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_1_while_emptytensorlist_13"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_1_while_emptytensorlist_14"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_1_while_emptytensorlist_15"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_1_while_emptytensorlist_16"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_1_while_emptytensorlist_17"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_1_while_emptytensorlist_18"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_1_while_emptytensorlist_19"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_1_while_emptytensorlist_20"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_1_while_emptytensorlist_21"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_1_while_emptytensorlist_22"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_1_while_emptytensorlist_23"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_1_while_emptytensorlist_24"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_1_while_emptytensorlist_25"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_1_while_emptytensorlist_26"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_1_while_emptytensorlist_27"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_1_while_emptytensorlist_28"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_1_while_emptytensorlist_29"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_1_while_emptytensorlist_30"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_1_while_emptytensorlist_31"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_1_while_emptytensorlist_32"
        type: DT_VARIANT
      }
      output_arg {
        name: "less"
        type: DT_BOOL
      }
    }
    node_def {
      name: "Less"
      op: "Less"
      input: "placeholder"
      input: "less_lstm_1_strided_slice_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "Less"
      }
    }
    ret {
      key: "less"
      value: "Less:z:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 32
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 32
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                unknown_rank: true
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 11
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 12
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 13
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 14
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 15
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 16
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 17
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 18
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 19
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 20
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 21
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 22
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 23
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 24
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 25
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 26
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 27
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 28
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 29
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 30
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 31
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 32
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 33
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 34
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 35
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 36
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 37
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 38
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 39
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 40
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 41
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 42
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 43
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "lstm_1_while_body_101"
      input_arg {
        name: "lstm_1_while_loop_counter"
        type: DT_INT32
      }
      input_arg {
        name: "lstm_1_while_maximum_iterations_0"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_2"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_3"
        type: DT_FLOAT
      }
      input_arg {
        name: "lstm_1_strided_slice_1_0"
        type: DT_INT32
      }
      input_arg {
        name: "tensorarrayv2read_tensorlistgetitem_lstm_1_tensorarrayunstack_tensorlistfromtensor_0"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_cell_matmul_readvariableop_lstm_1_lstm_cell_kernel_0"
        type: DT_RESOURCE
      }
      input_arg {
        name: "lstm_cell_matmul_1_readvariableop_lstm_1_lstm_cell_recurrent_kernel_0"
        type: DT_RESOURCE
      }
      input_arg {
        name: "lstm_cell_biasadd_readvariableop_lstm_1_lstm_cell_bias_0"
        type: DT_RESOURCE
      }
      input_arg {
        name: "tensorlistpushback_lstm_1_while_emptytensorlist"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_1_lstm_1_while_emptytensorlist_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_2_lstm_1_while_emptytensorlist_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_3_lstm_1_while_emptytensorlist_3"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_4_lstm_1_while_emptytensorlist_4"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_5_lstm_1_while_emptytensorlist_5"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_6_lstm_1_while_emptytensorlist_6"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_7_lstm_1_while_emptytensorlist_7"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_8_lstm_1_while_emptytensorlist_8"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_9_lstm_1_while_emptytensorlist_9"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_10_lstm_1_while_emptytensorlist_10"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_11_lstm_1_while_emptytensorlist_11"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_12_lstm_1_while_emptytensorlist_12"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_13_lstm_1_while_emptytensorlist_13"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_14_lstm_1_while_emptytensorlist_14"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_15_lstm_1_while_emptytensorlist_15"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_16_lstm_1_while_emptytensorlist_16"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_17_lstm_1_while_emptytensorlist_17"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_18_lstm_1_while_emptytensorlist_18"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_19_lstm_1_while_emptytensorlist_19"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_20_lstm_1_while_emptytensorlist_20"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_21_lstm_1_while_emptytensorlist_21"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_22_lstm_1_while_emptytensorlist_22"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_23_lstm_1_while_emptytensorlist_23"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_24_lstm_1_while_emptytensorlist_24"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_25_lstm_1_while_emptytensorlist_25"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_26_lstm_1_while_emptytensorlist_26"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_27_lstm_1_while_emptytensorlist_27"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_28_lstm_1_while_emptytensorlist_28"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_29_lstm_1_while_emptytensorlist_29"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_30_lstm_1_while_emptytensorlist_30"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_31_lstm_1_while_emptytensorlist_31"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_32_lstm_1_while_emptytensorlist_32"
        type: DT_VARIANT
      }
      output_arg {
        name: "add_1"
        type: DT_INT32
      }
      output_arg {
        name: "lstm_1_while_maximum_iterations"
        type: DT_INT32
      }
      output_arg {
        name: "add"
        type: DT_INT32
      }
      output_arg {
        name: "tensorarrayv2write_tensorlistsetitem"
        type: DT_VARIANT
      }
      output_arg {
        name: "lstm_cell_mul_2"
        type: DT_FLOAT
      }
      output_arg {
        name: "lstm_cell_add_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "lstm_1_strided_slice_1"
        type: DT_INT32
      }
      output_arg {
        name: "tensorarrayv2read_tensorlistgetitem_lstm_1_tensorarrayunstack_tensorlistfromtensor"
        type: DT_VARIANT
      }
      output_arg {
        name: "lstm_cell_matmul_readvariableop_lstm_1_lstm_cell_kernel"
        type: DT_RESOURCE
      }
      output_arg {
        name: "lstm_cell_matmul_1_readvariableop_lstm_1_lstm_cell_recurrent_kernel"
        type: DT_RESOURCE
      }
      output_arg {
        name: "lstm_cell_biasadd_readvariableop_lstm_1_lstm_cell_bias"
        type: DT_RESOURCE
      }
      output_arg {
        name: "tensorlistpushback"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_4"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_5"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_6"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_7"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_8"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_9"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_10"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_11"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_12"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_13"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_14"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_15"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_16"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_17"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_18"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_19"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_20"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_21"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_22"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_23"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_24"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_25"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_26"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_27"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_28"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_29"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_30"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_31"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_32"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "TensorArrayV2Read/TensorListGetItem/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\377\377\377\377\t\000\000\000"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "TensorArrayV2Read/TensorListGetItem/element_shape"
      }
    }
    node_def {
      name: "TensorArrayV2Read/TensorListGetItem"
      op: "TensorListGetItem"
      input: "tensorarrayv2read_tensorlistgetitem_lstm_1_tensorarrayunstack_tensorlistfromtensor_0"
      input: "placeholder"
      input: "TensorArrayV2Read/TensorListGetItem/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorArrayV2Read/TensorListGetItem"
      }
    }
    node_def {
      name: "lstm_cell/MatMul/ReadVariableOp"
      op: "ReadVariableOp"
      input: "lstm_cell_matmul_readvariableop_lstm_1_lstm_cell_kernel_0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "lstm_cell/MatMul/ReadVariableOp"
      }
    }
    node_def {
      name: "lstm_cell/MatMul"
      op: "MatMul"
      input: "TensorArrayV2Read/TensorListGetItem:item:0"
      input: "lstm_cell/MatMul/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "lstm_cell/MatMul"
      }
    }
    node_def {
      name: "lstm_cell/MatMul_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "lstm_cell_matmul_1_readvariableop_lstm_1_lstm_cell_recurrent_kernel_0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "lstm_cell/MatMul_1/ReadVariableOp"
      }
    }
    node_def {
      name: "lstm_cell/MatMul_1"
      op: "MatMul"
      input: "placeholder_2"
      input: "lstm_cell/MatMul_1/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "lstm_cell/MatMul_1"
      }
    }
    node_def {
      name: "lstm_cell/add"
      op: "AddV2"
      input: "lstm_cell/MatMul:product:0"
      input: "lstm_cell/MatMul_1:product:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "lstm_cell/add"
      }
    }
    node_def {
      name: "lstm_cell/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "lstm_cell_biasadd_readvariableop_lstm_1_lstm_cell_bias_0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "lstm_cell/BiasAdd/ReadVariableOp"
      }
    }
    node_def {
      name: "lstm_cell/BiasAdd"
      op: "BiasAdd"
      input: "lstm_cell/add:z:0"
      input: "lstm_cell/BiasAdd/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      experimental_debug_info {
        original_node_names: "lstm_cell/BiasAdd"
      }
    }
    node_def {
      name: "lstm_cell/split/split_dim"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "lstm_cell/split/split_dim"
      }
    }
    node_def {
      name: "lstm_cell/split"
      op: "Split"
      input: "lstm_cell/split/split_dim:output:0"
      input: "lstm_cell/BiasAdd:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "num_split"
        value {
          i: 4
        }
      }
      experimental_debug_info {
        original_node_names: "lstm_cell/split"
      }
    }
    node_def {
      name: "lstm_cell/Sigmoid"
      op: "Sigmoid"
      input: "lstm_cell/split:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "lstm_cell/Sigmoid"
      }
    }
    node_def {
      name: "lstm_cell/Sigmoid_1"
      op: "Sigmoid"
      input: "lstm_cell/split:output:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "lstm_cell/Sigmoid_1"
      }
    }
    node_def {
      name: "lstm_cell/mul"
      op: "Mul"
      input: "lstm_cell/Sigmoid_1:y:0"
      input: "placeholder_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "lstm_cell/mul"
      }
    }
    node_def {
      name: "lstm_cell/Tanh"
      op: "Tanh"
      input: "lstm_cell/split:output:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "lstm_cell/Tanh"
      }
    }
    node_def {
      name: "lstm_cell/mul_1"
      op: "Mul"
      input: "lstm_cell/Sigmoid:y:0"
      input: "lstm_cell/Tanh:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "lstm_cell/mul_1"
      }
    }
    node_def {
      name: "lstm_cell/add_1"
      op: "AddV2"
      input: "lstm_cell/mul:z:0"
      input: "lstm_cell/mul_1:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "lstm_cell/add_1"
      }
    }
    node_def {
      name: "lstm_cell/Sigmoid_2"
      op: "Sigmoid"
      input: "lstm_cell/split:output:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "lstm_cell/Sigmoid_2"
      }
    }
    node_def {
      name: "lstm_cell/Tanh_1"
      op: "Tanh"
      input: "lstm_cell/add_1:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "lstm_cell/Tanh_1"
      }
    }
    node_def {
      name: "lstm_cell/mul_2"
      op: "Mul"
      input: "lstm_cell/Sigmoid_2:y:0"
      input: "lstm_cell/Tanh_1:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "lstm_cell/mul_2"
      }
    }
    node_def {
      name: "TensorArrayV2Write/TensorListSetItem"
      op: "TensorListSetItem"
      input: "placeholder_1"
      input: "placeholder"
      input: "lstm_cell/mul_2:z:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorArrayV2Write/TensorListSetItem"
      }
    }
    node_def {
      name: "add/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "add/y"
      }
    }
    node_def {
      name: "add_0"
      op: "AddV2"
      input: "placeholder"
      input: "add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "add"
      }
    }
    node_def {
      name: "add_1/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "add_1/y"
      }
    }
    node_def {
      name: "add_1_0"
      op: "AddV2"
      input: "lstm_1_while_loop_counter"
      input: "add_1/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "add_1"
      }
    }
    node_def {
      name: "TensorListPushBack"
      op: "TensorListPushBack"
      input: "tensorlistpushback_lstm_1_while_emptytensorlist"
      input: "lstm_1_while_maximum_iterations_0"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack"
      }
    }
    node_def {
      name: "TensorListPushBack_1"
      op: "TensorListPushBack"
      input: "tensorlistpushback_1_lstm_1_while_emptytensorlist_1"
      input: "placeholder"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_1"
      }
    }
    node_def {
      name: "TensorListPushBack_2"
      op: "TensorListPushBack"
      input: "tensorlistpushback_2_lstm_1_while_emptytensorlist_2"
      input: "placeholder_1"
      attr {
        key: "element_dtype"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_2"
      }
    }
    node_def {
      name: "TensorListPushBack_3"
      op: "TensorListPushBack"
      input: "tensorlistpushback_3_lstm_1_while_emptytensorlist_3"
      input: "placeholder_2"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_3"
      }
    }
    node_def {
      name: "TensorListPushBack_4"
      op: "TensorListPushBack"
      input: "tensorlistpushback_4_lstm_1_while_emptytensorlist_4"
      input: "placeholder_3"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_4"
      }
    }
    node_def {
      name: "TensorListPushBack_5"
      op: "TensorListPushBack"
      input: "tensorlistpushback_5_lstm_1_while_emptytensorlist_5"
      input: "TensorArrayV2Read/TensorListGetItem/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_5"
      }
    }
    node_def {
      name: "TensorListPushBack_6"
      op: "TensorListPushBack"
      input: "tensorlistpushback_6_lstm_1_while_emptytensorlist_6"
      input: "TensorArrayV2Read/TensorListGetItem:item:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_6"
      }
    }
    node_def {
      name: "TensorListPushBack_7"
      op: "TensorListPushBack"
      input: "tensorlistpushback_7_lstm_1_while_emptytensorlist_7"
      input: "lstm_cell/MatMul/ReadVariableOp:value:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_7"
      }
    }
    node_def {
      name: "TensorListPushBack_8"
      op: "TensorListPushBack"
      input: "tensorlistpushback_8_lstm_1_while_emptytensorlist_8"
      input: "lstm_cell/MatMul:product:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_8"
      }
    }
    node_def {
      name: "TensorListPushBack_9"
      op: "TensorListPushBack"
      input: "tensorlistpushback_9_lstm_1_while_emptytensorlist_9"
      input: "lstm_cell/MatMul_1/ReadVariableOp:value:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_9"
      }
    }
    node_def {
      name: "TensorListPushBack_10"
      op: "TensorListPushBack"
      input: "tensorlistpushback_10_lstm_1_while_emptytensorlist_10"
      input: "lstm_cell/MatMul_1:product:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_10"
      }
    }
    node_def {
      name: "TensorListPushBack_11"
      op: "TensorListPushBack"
      input: "tensorlistpushback_11_lstm_1_while_emptytensorlist_11"
      input: "lstm_cell/add:z:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_11"
      }
    }
    node_def {
      name: "TensorListPushBack_12"
      op: "TensorListPushBack"
      input: "tensorlistpushback_12_lstm_1_while_emptytensorlist_12"
      input: "lstm_cell/BiasAdd/ReadVariableOp:value:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_12"
      }
    }
    node_def {
      name: "TensorListPushBack_13"
      op: "TensorListPushBack"
      input: "tensorlistpushback_13_lstm_1_while_emptytensorlist_13"
      input: "lstm_cell/BiasAdd:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_13"
      }
    }
    node_def {
      name: "TensorListPushBack_14"
      op: "TensorListPushBack"
      input: "tensorlistpushback_14_lstm_1_while_emptytensorlist_14"
      input: "lstm_cell/split/split_dim:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_14"
      }
    }
    node_def {
      name: "TensorListPushBack_15"
      op: "TensorListPushBack"
      input: "tensorlistpushback_15_lstm_1_while_emptytensorlist_15"
      input: "lstm_cell/split:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_15"
      }
    }
    node_def {
      name: "TensorListPushBack_16"
      op: "TensorListPushBack"
      input: "tensorlistpushback_16_lstm_1_while_emptytensorlist_16"
      input: "lstm_cell/split:output:1"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_16"
      }
    }
    node_def {
      name: "TensorListPushBack_17"
      op: "TensorListPushBack"
      input: "tensorlistpushback_17_lstm_1_while_emptytensorlist_17"
      input: "lstm_cell/split:output:2"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_17"
      }
    }
    node_def {
      name: "TensorListPushBack_18"
      op: "TensorListPushBack"
      input: "tensorlistpushback_18_lstm_1_while_emptytensorlist_18"
      input: "lstm_cell/split:output:3"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_18"
      }
    }
    node_def {
      name: "TensorListPushBack_19"
      op: "TensorListPushBack"
      input: "tensorlistpushback_19_lstm_1_while_emptytensorlist_19"
      input: "lstm_cell/Sigmoid:y:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_19"
      }
    }
    node_def {
      name: "TensorListPushBack_20"
      op: "TensorListPushBack"
      input: "tensorlistpushback_20_lstm_1_while_emptytensorlist_20"
      input: "lstm_cell/Sigmoid_1:y:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_20"
      }
    }
    node_def {
      name: "TensorListPushBack_21"
      op: "TensorListPushBack"
      input: "tensorlistpushback_21_lstm_1_while_emptytensorlist_21"
      input: "lstm_cell/mul:z:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_21"
      }
    }
    node_def {
      name: "TensorListPushBack_22"
      op: "TensorListPushBack"
      input: "tensorlistpushback_22_lstm_1_while_emptytensorlist_22"
      input: "lstm_cell/Tanh:y:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_22"
      }
    }
    node_def {
      name: "TensorListPushBack_23"
      op: "TensorListPushBack"
      input: "tensorlistpushback_23_lstm_1_while_emptytensorlist_23"
      input: "lstm_cell/mul_1:z:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_23"
      }
    }
    node_def {
      name: "TensorListPushBack_24"
      op: "TensorListPushBack"
      input: "tensorlistpushback_24_lstm_1_while_emptytensorlist_24"
      input: "lstm_cell/add_1:z:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_24"
      }
    }
    node_def {
      name: "TensorListPushBack_25"
      op: "TensorListPushBack"
      input: "tensorlistpushback_25_lstm_1_while_emptytensorlist_25"
      input: "lstm_cell/Sigmoid_2:y:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_25"
      }
    }
    node_def {
      name: "TensorListPushBack_26"
      op: "TensorListPushBack"
      input: "tensorlistpushback_26_lstm_1_while_emptytensorlist_26"
      input: "lstm_cell/Tanh_1:y:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_26"
      }
    }
    node_def {
      name: "TensorListPushBack_27"
      op: "TensorListPushBack"
      input: "tensorlistpushback_27_lstm_1_while_emptytensorlist_27"
      input: "lstm_cell/mul_2:z:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_27"
      }
    }
    node_def {
      name: "TensorListPushBack_28"
      op: "TensorListPushBack"
      input: "tensorlistpushback_28_lstm_1_while_emptytensorlist_28"
      input: "TensorArrayV2Write/TensorListSetItem:output_handle:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_28"
      }
    }
    node_def {
      name: "TensorListPushBack_29"
      op: "TensorListPushBack"
      input: "tensorlistpushback_29_lstm_1_while_emptytensorlist_29"
      input: "add/y:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_29"
      }
    }
    node_def {
      name: "TensorListPushBack_30"
      op: "TensorListPushBack"
      input: "tensorlistpushback_30_lstm_1_while_emptytensorlist_30"
      input: "add_0:z:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_30"
      }
    }
    node_def {
      name: "TensorListPushBack_31"
      op: "TensorListPushBack"
      input: "tensorlistpushback_31_lstm_1_while_emptytensorlist_31"
      input: "add_1/y:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_31"
      }
    }
    node_def {
      name: "TensorListPushBack_32"
      op: "TensorListPushBack"
      input: "tensorlistpushback_32_lstm_1_while_emptytensorlist_32"
      input: "add_1_0:z:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_32"
      }
    }
    ret {
      key: "add"
      value: "add_0:z:0"
    }
    ret {
      key: "add_1"
      value: "add_1_0:z:0"
    }
    ret {
      key: "lstm_1_strided_slice_1"
      value: "lstm_1_strided_slice_1_0"
    }
    ret {
      key: "lstm_1_while_maximum_iterations"
      value: "lstm_1_while_maximum_iterations_0"
    }
    ret {
      key: "lstm_cell_add_1"
      value: "lstm_cell/add_1:z:0"
    }
    ret {
      key: "lstm_cell_biasadd_readvariableop_lstm_1_lstm_cell_bias"
      value: "lstm_cell_biasadd_readvariableop_lstm_1_lstm_cell_bias_0"
    }
    ret {
      key: "lstm_cell_matmul_1_readvariableop_lstm_1_lstm_cell_recurrent_kernel"
      value: "lstm_cell_matmul_1_readvariableop_lstm_1_lstm_cell_recurrent_kernel_0"
    }
    ret {
      key: "lstm_cell_matmul_readvariableop_lstm_1_lstm_cell_kernel"
      value: "lstm_cell_matmul_readvariableop_lstm_1_lstm_cell_kernel_0"
    }
    ret {
      key: "lstm_cell_mul_2"
      value: "lstm_cell/mul_2:z:0"
    }
    ret {
      key: "tensorarrayv2read_tensorlistgetitem_lstm_1_tensorarrayunstack_tensorlistfromtensor"
      value: "tensorarrayv2read_tensorlistgetitem_lstm_1_tensorarrayunstack_tensorlistfromtensor_0"
    }
    ret {
      key: "tensorarrayv2write_tensorlistsetitem"
      value: "TensorArrayV2Write/TensorListSetItem:output_handle:0"
    }
    ret {
      key: "tensorlistpushback"
      value: "TensorListPushBack:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_1"
      value: "TensorListPushBack_1:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_10"
      value: "TensorListPushBack_10:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_11"
      value: "TensorListPushBack_11:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_12"
      value: "TensorListPushBack_12:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_13"
      value: "TensorListPushBack_13:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_14"
      value: "TensorListPushBack_14:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_15"
      value: "TensorListPushBack_15:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_16"
      value: "TensorListPushBack_16:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_17"
      value: "TensorListPushBack_17:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_18"
      value: "TensorListPushBack_18:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_19"
      value: "TensorListPushBack_19:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_2"
      value: "TensorListPushBack_2:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_20"
      value: "TensorListPushBack_20:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_21"
      value: "TensorListPushBack_21:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_22"
      value: "TensorListPushBack_22:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_23"
      value: "TensorListPushBack_23:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_24"
      value: "TensorListPushBack_24:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_25"
      value: "TensorListPushBack_25:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_26"
      value: "TensorListPushBack_26:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_27"
      value: "TensorListPushBack_27:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_28"
      value: "TensorListPushBack_28:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_29"
      value: "TensorListPushBack_29:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_3"
      value: "TensorListPushBack_3:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_30"
      value: "TensorListPushBack_30:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_31"
      value: "TensorListPushBack_31:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_32"
      value: "TensorListPushBack_32:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_4"
      value: "TensorListPushBack_4:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_5"
      value: "TensorListPushBack_5:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_6"
      value: "TensorListPushBack_6:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_7"
      value: "TensorListPushBack_7:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_8"
      value: "TensorListPushBack_8:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_9"
      value: "TensorListPushBack_9:output_handle:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 32
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 32
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 11
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 12
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 13
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 14
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 15
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 16
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 17
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 18
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 19
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 20
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 21
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 22
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 23
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 24
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 25
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 26
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 27
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 28
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 29
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 30
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 31
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 32
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 33
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 34
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 35
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 36
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 37
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 38
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 39
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 40
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 41
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 42
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 43
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
}
versions {
  producer: 808
  min_consumer: 12
}
